"use strict";var Main={};Main.load=function(){window.addEventListener("DOMContentLoaded",function(){var canvas=document.getElementById("renderCanvas"),engine=new BABYLON.Engine(canvas,(!0)),sc=new Scene(engine);sc.createGround(),sc.createSpheres(15),engine.runRenderLoop(function(){sc.render()}),window.addEventListener("resize",function(){engine.resize()}),window.addEventListener("click",function(){sc.createSpheres(5)})})};var Scene=function(engine){this.meshes=[],this.engine=engine,this.scene=new BABYLON.Scene(this.engine),this.scene.ambientColor=new BABYLON.Color3(.3,.3,.3),this.camera=new BABYLON.ArcRotateCamera("camera",3*Math.PI/2,Math.PI/8,50,BABYLON.Vector3.Zero(),this.scene),this.camera.checkCollisions=!0,this.camera.applyGravity=!0,this.camera.setPosition(new BABYLON.Vector3(160,80,100)),this.camera.attachControl(this.engine.getRenderingCanvas(),!0),this.light=new BABYLON.DirectionalLight("light",new BABYLON.Vector3(.2,(-1),0),this.scene),this.light.position=new BABYLON.Vector3(0,80,0),this.groundMat=new BABYLON.StandardMaterial("groundMat",this.scene),this.groundMat.diffuseColor=new BABYLON.Color3(.5,.5,.5),this.groundMat.emissiveColor=new BABYLON.Color3(.2,.2,.2),this.groundMat.backFaceCulling=!1,this.alphaMat=new BABYLON.StandardMaterial("alphaMat",this.scene),this.alphaMat.diffuseColor=BABYLON.Color3.White(),this.alphaMat.alpha=0,this.shadowGenerator=new BABYLON.ShadowGenerator(2048,this.light),this.scene.enablePhysics(null,new BABYLON.CannonJSPlugin),this.scene.onPointerDown=function(evt,pickResult){if(pickResult.hit){var dir=pickResult.pickedPoint.subtract(this.activeCamera.position);dir.normalize(),pickResult.pickedMesh.applyImpulse(dir.scale(20),pickResult.pickedPoint)}}};Scene.prototype.createGround=function(){var width=100,depth=100,height=50,thick=.5,stepHeight=2,parts=[],ground=BABYLON.Mesh.CreateGround("ground",width,depth,1,this.scene);ground.material=this.groundMat,ground.position.y=-20,ground.checkCollisions=!0,ground.receiveShadows=!0,parts.push({mesh:ground,impostor:BABYLON.PhysicsEngine.BoxImpostor});var border0=BABYLON.Mesh.CreateBox("border0",1,this.scene);border0.scaling=new BABYLON.Vector3(thick,height,depth),border0.material=this.alphaMat,border0.position.y=height/2,border0.position.x=-width/2,border0.checkCollisions=!0,border0.parent=ground,parts.push({mesh:border0,impostor:BABYLON.PhysicsEngine.BoxImpostor});var border1=BABYLON.Mesh.CreateBox("border1",1,this.scene);border1.scaling=new BABYLON.Vector3(thick,height,depth),border1.material=this.alphaMat,border1.position.y=height/2,border1.position.x=width/2,border1.checkCollisions=!0,border1.parent=ground,parts.push({mesh:border1,impostor:BABYLON.PhysicsEngine.BoxImpostor});var border2=BABYLON.Mesh.CreateBox("border2",1,this.scene);border2.scaling=new BABYLON.Vector3(width,height,thick),border2.material=this.alphaMat,border2.position.y=height/2,border2.position.z=depth/2,border2.checkCollisions=!0,border2.parent=ground,parts.push({mesh:border2,impostor:BABYLON.PhysicsEngine.BoxImpostor});var border3=BABYLON.Mesh.CreateBox("border3",1,this.scene);border3.scaling=new BABYLON.Vector3(width,height,thick),border3.material=this.alphaMat,border3.position.y=height/2,border3.position.z=-depth/2,border3.checkCollisions=!0,border3.parent=ground,parts.push({mesh:border3,impostor:BABYLON.PhysicsEngine.BoxImpostor});for(var idx=0;idx<9;idx++){var st=BABYLON.Mesh.CreateBox("step"+idx.toString(),1,this.scene);st.scaling=new BABYLON.Vector3(width-3*(idx+5)*stepHeight,stepHeight,depth-3*(idx+5)*stepHeight),st.material=this.groundMat,st.position.y=(idx+1)*stepHeight,st.checkCollisions=!0,st.receiveShadows=!0,this.shadowGenerator.getShadowMap().renderList.push(st),st.parent=ground,parts.push({mesh:st,impostor:BABYLON.PhysicsEngine.BoxImpostor})}this.scene.createCompoundImpostor(parts,{mass:0,friction:.5,restitution:.7})},Scene.prototype.createSpheres=function(num){for(var y=50,index=0;index<num;index++){var sphere=BABYLON.Mesh.CreateSphere("Sphere0",12,3,this.scene);if(sphere.position=new BABYLON.Vector3(20*Math.random()-10,y,10*Math.random()-5),this.shadowGenerator.getShadowMap().renderList.push(sphere),sphere.setPhysicsState(BABYLON.PhysicsEngine.SphereImpostor,{mass:1,friction:.5,restitution:.5}),sphere.applyImpulse(new BABYLON.Vector3(0,(-10),0),sphere.position),this.meshes.push(sphere),this.meshes.length>=50){var toRemove=this.meshes.shift();this.scene.removeMesh(toRemove),toRemove.setPhysicsState(null,null),toRemove.dispose()}y+=2}},Scene.prototype.render=function(){this.scene.render()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
